# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/php:7.2-node-browsers

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mysql:9.4

    working_directory: ~/repo

    steps:
      - checkout

      - add_ssh_keys:
          fingerprints:
            - '3e:a4:42:43:6f:ae:12:37:7f:df:a6:ec:de:46:d2:ce'

      - run:
          name: Start ssh-keyscan
          command: ssh-keyscan ${HOST_NAME} >> ~/.ssh/known_hosts

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "oekaki/composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - restore_cache:
          keys:
            - v1-dependencies-yarn-{{ checksum "yarn.lock" }}
            - v1-dependencies-yarn-

      - run:
          name: Install PHP dependencies
          command: cd oekaki; composer install -n --prefer-dist; cd ..

      - run:
          name: Install JavaScript dependencies
          command: yarn

      - run:
          name: ESLint
          command: yarn lint

      - run:
          name: Build JavaScript
          command: yarn build

      - save_cache:
          paths:
            - ./oekaki/vendor
          key: v1-dependencies-{{ checksum "oekaki/composer.json" }}

      - save_cache:
          paths:
            - ./node_modules
          key: v1-dependencies-yarn-{{ checksum "yarn.lock" }}

      - deploy:
          name: Start master deploy
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              rsync -avn --delete ./oekaki/ ${USER_NAME}@${HOST_NAME}:${DEPLOY_PATH}
            fi
